Grammar

    0 $accept: program $end

    1 program: ExtDefList

    2 ExtDefList: /* empty */
    3           | ExtDef ExtDefList

    4 ExtDef: Specifier ExtDecList SEMI
    5       | Specifier FuncDec CompSt
    6       | error SEMI

    7 Specifier: TYPE

    8 ExtDecList: VarDec
    9           | VarDec COMMA ExtDecList

   10 VarDec: ID

   11 FuncDec: ID LP VarList RP
   12        | ID LP RP

   13 VarList: ParamDec
   14        | ParamDec COMMA VarList

   15 ParamDec: Specifier VarDec

   16 CompSt: LC DefList StmList RC

   17 StmList: /* empty */
   18        | Stmt StmList

   19 Stmt: Exp SEMI
   20     | CompSt
   21     | RETURN Exp SEMI
   22     | IF LP Exp RP Stmt
   23     | IF LP Exp RP Stmt ELSE Stmt
   24     | WHILE LP Exp RP Stmt
   25     | error

   26 DefList: /* empty */
   27        | Def DefList

   28 Def: Specifier DecList SEMI

   29 DecList: Dec
   30        | Dec COMMA DecList

   31 Dec: VarDec
   32    | VarDec ASSIGNOP Exp

   33 Exp: Exp ASSIGNOP Exp
   34    | Exp AND Exp
   35    | Exp OR Exp
   36    | Exp RELOP Exp
   37    | Exp PLUS Exp
   38    | Exp MINUS Exp
   39    | Exp ADDA
   40    | Exp SUBS
   41    | ADDA Exp
   42    | SUBS Exp
   43    | Exp STAR Exp
   44    | Exp DIV Exp
   45    | LP Exp RP
   46    | MINUS Exp
   47    | NOT Exp
   48    | ID LP Args RP
   49    | ID LP RP
   50    | ID
   51    | INT
   52    | FLOAT
   53    | CHAR
   54    | error SEMI

   55 Args: Exp COMMA Args
   56     | Exp


Terminals, with rules where they appear

$end (0) 0
error (256) 6 25 54
INT (258) 51
ID (259) 10 11 12 48 49 50
RELOP (260) 36
TYPE (261) 7
FLOAT (262) 52
CHAR (263) 53
LP (264) 11 12 22 23 24 45 48 49
RP (265) 11 12 22 23 24 45 48 49
LC (266) 16
RC (267) 16
SEMI (268) 4 6 19 21 28 54
COMMA (269) 9 14 30 55
PLUS (270) 37
MINUS (271) 38 46
ADDA (272) 39 41
SUBS (273) 40 42
STAR (274) 43
DIV (275) 44
ASSIGNOP (276) 32 33
AND (277) 34
OR (278) 35
NOT (279) 47
IF (280) 22 23
ELSE (281) 23
WHILE (282) 24
RETURN (283) 21
UMINUS (284)
LOWER_THEN_ELSE (285)


Nonterminals, with rules where they appear

$accept (31)
    on left: 0
program (32)
    on left: 1, on right: 0
ExtDefList (33)
    on left: 2 3, on right: 1 3
ExtDef (34)
    on left: 4 5 6, on right: 3
Specifier (35)
    on left: 7, on right: 4 5 15 28
ExtDecList (36)
    on left: 8 9, on right: 4 9
VarDec (37)
    on left: 10, on right: 8 9 15 31 32
FuncDec (38)
    on left: 11 12, on right: 5
VarList (39)
    on left: 13 14, on right: 11 14
ParamDec (40)
    on left: 15, on right: 13 14
CompSt (41)
    on left: 16, on right: 5 20
StmList (42)
    on left: 17 18, on right: 16 18
Stmt (43)
    on left: 19 20 21 22 23 24 25, on right: 18 22 23 24
DefList (44)
    on left: 26 27, on right: 16 27
Def (45)
    on left: 28, on right: 27
DecList (46)
    on left: 29 30, on right: 28 30
Dec (47)
    on left: 31 32, on right: 29 30
Exp (48)
    on left: 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50
    51 52 53 54, on right: 19 21 22 23 24 32 33 34 35 36 37 38 39 40
    41 42 43 44 45 46 47 55 56
Args (49)
    on left: 55 56, on right: 48 55


state 0

    0 $accept: . program $end

    error  shift, and go to state 1
    TYPE   shift, and go to state 2

    $end  reduce using rule 2 (ExtDefList)

    program     go to state 3
    ExtDefList  go to state 4
    ExtDef      go to state 5
    Specifier   go to state 6


state 1

    6 ExtDef: error . SEMI

    SEMI  shift, and go to state 7


state 2

    7 Specifier: TYPE .

    $default  reduce using rule 7 (Specifier)


state 3

    0 $accept: program . $end

    $end  shift, and go to state 8


state 4

    1 program: ExtDefList .

    $default  reduce using rule 1 (program)


state 5

    3 ExtDefList: ExtDef . ExtDefList

    error  shift, and go to state 1
    TYPE   shift, and go to state 2

    $end  reduce using rule 2 (ExtDefList)

    ExtDefList  go to state 9
    ExtDef      go to state 5
    Specifier   go to state 6


state 6

    4 ExtDef: Specifier . ExtDecList SEMI
    5       | Specifier . FuncDec CompSt

    ID  shift, and go to state 10

    ExtDecList  go to state 11
    VarDec      go to state 12
    FuncDec     go to state 13


state 7

    6 ExtDef: error SEMI .

    $default  reduce using rule 6 (ExtDef)


state 8

    0 $accept: program $end .

    $default  accept


state 9

    3 ExtDefList: ExtDef ExtDefList .

    $default  reduce using rule 3 (ExtDefList)


state 10

   10 VarDec: ID .
   11 FuncDec: ID . LP VarList RP
   12        | ID . LP RP

    LP  shift, and go to state 14

    $default  reduce using rule 10 (VarDec)


state 11

    4 ExtDef: Specifier ExtDecList . SEMI

    SEMI  shift, and go to state 15


state 12

    8 ExtDecList: VarDec .
    9           | VarDec . COMMA ExtDecList

    COMMA  shift, and go to state 16

    $default  reduce using rule 8 (ExtDecList)


state 13

    5 ExtDef: Specifier FuncDec . CompSt

    LC  shift, and go to state 17

    CompSt  go to state 18


state 14

   11 FuncDec: ID LP . VarList RP
   12        | ID LP . RP

    TYPE  shift, and go to state 2
    RP    shift, and go to state 19

    Specifier  go to state 20
    VarList    go to state 21
    ParamDec   go to state 22


state 15

    4 ExtDef: Specifier ExtDecList SEMI .

    $default  reduce using rule 4 (ExtDef)


state 16

    9 ExtDecList: VarDec COMMA . ExtDecList

    ID  shift, and go to state 23

    ExtDecList  go to state 24
    VarDec      go to state 12


state 17

   16 CompSt: LC . DefList StmList RC

    TYPE  shift, and go to state 2

    $default  reduce using rule 26 (DefList)

    Specifier  go to state 25
    DefList    go to state 26
    Def        go to state 27


state 18

    5 ExtDef: Specifier FuncDec CompSt .

    $default  reduce using rule 5 (ExtDef)


state 19

   12 FuncDec: ID LP RP .

    $default  reduce using rule 12 (FuncDec)


state 20

   15 ParamDec: Specifier . VarDec

    ID  shift, and go to state 23

    VarDec  go to state 28


state 21

   11 FuncDec: ID LP VarList . RP

    RP  shift, and go to state 29


state 22

   13 VarList: ParamDec .
   14        | ParamDec . COMMA VarList

    COMMA  shift, and go to state 30

    $default  reduce using rule 13 (VarList)


state 23

   10 VarDec: ID .

    $default  reduce using rule 10 (VarDec)


state 24

    9 ExtDecList: VarDec COMMA ExtDecList .

    $default  reduce using rule 9 (ExtDecList)


state 25

   28 Def: Specifier . DecList SEMI

    ID  shift, and go to state 23

    VarDec   go to state 31
    DecList  go to state 32
    Dec      go to state 33


state 26

   16 CompSt: LC DefList . StmList RC

    error   shift, and go to state 34
    INT     shift, and go to state 35
    ID      shift, and go to state 36
    FLOAT   shift, and go to state 37
    CHAR    shift, and go to state 38
    LP      shift, and go to state 39
    LC      shift, and go to state 17
    MINUS   shift, and go to state 40
    ADDA    shift, and go to state 41
    SUBS    shift, and go to state 42
    NOT     shift, and go to state 43
    IF      shift, and go to state 44
    WHILE   shift, and go to state 45
    RETURN  shift, and go to state 46

    RC  reduce using rule 17 (StmList)

    CompSt   go to state 47
    StmList  go to state 48
    Stmt     go to state 49
    Exp      go to state 50


state 27

   27 DefList: Def . DefList

    TYPE  shift, and go to state 2

    $default  reduce using rule 26 (DefList)

    Specifier  go to state 25
    DefList    go to state 51
    Def        go to state 27


state 28

   15 ParamDec: Specifier VarDec .

    $default  reduce using rule 15 (ParamDec)


state 29

   11 FuncDec: ID LP VarList RP .

    $default  reduce using rule 11 (FuncDec)


state 30

   14 VarList: ParamDec COMMA . VarList

    TYPE  shift, and go to state 2

    Specifier  go to state 20
    VarList    go to state 52
    ParamDec   go to state 22


state 31

   31 Dec: VarDec .
   32    | VarDec . ASSIGNOP Exp

    ASSIGNOP  shift, and go to state 53

    $default  reduce using rule 31 (Dec)


state 32

   28 Def: Specifier DecList . SEMI

    SEMI  shift, and go to state 54


state 33

   29 DecList: Dec .
   30        | Dec . COMMA DecList

    COMMA  shift, and go to state 55

    $default  reduce using rule 29 (DecList)


state 34

   25 Stmt: error .
   54 Exp: error . SEMI

    SEMI  shift, and go to state 56

    $default  reduce using rule 25 (Stmt)


state 35

   51 Exp: INT .

    $default  reduce using rule 51 (Exp)


state 36

   48 Exp: ID . LP Args RP
   49    | ID . LP RP
   50    | ID .

    LP  shift, and go to state 57

    $default  reduce using rule 50 (Exp)


state 37

   52 Exp: FLOAT .

    $default  reduce using rule 52 (Exp)


state 38

   53 Exp: CHAR .

    $default  reduce using rule 53 (Exp)


state 39

   45 Exp: LP . Exp RP

    error  shift, and go to state 58
    INT    shift, and go to state 35
    ID     shift, and go to state 36
    FLOAT  shift, and go to state 37
    CHAR   shift, and go to state 38
    LP     shift, and go to state 39
    MINUS  shift, and go to state 40
    ADDA   shift, and go to state 41
    SUBS   shift, and go to state 42
    NOT    shift, and go to state 43

    Exp  go to state 59


state 40

   46 Exp: MINUS . Exp

    error  shift, and go to state 58
    INT    shift, and go to state 35
    ID     shift, and go to state 36
    FLOAT  shift, and go to state 37
    CHAR   shift, and go to state 38
    LP     shift, and go to state 39
    MINUS  shift, and go to state 40
    ADDA   shift, and go to state 41
    SUBS   shift, and go to state 42
    NOT    shift, and go to state 43

    Exp  go to state 60


state 41

   41 Exp: ADDA . Exp

    error  shift, and go to state 58
    INT    shift, and go to state 35
    ID     shift, and go to state 36
    FLOAT  shift, and go to state 37
    CHAR   shift, and go to state 38
    LP     shift, and go to state 39
    MINUS  shift, and go to state 40
    ADDA   shift, and go to state 41
    SUBS   shift, and go to state 42
    NOT    shift, and go to state 43

    Exp  go to state 61


state 42

   42 Exp: SUBS . Exp

    error  shift, and go to state 58
    INT    shift, and go to state 35
    ID     shift, and go to state 36
    FLOAT  shift, and go to state 37
    CHAR   shift, and go to state 38
    LP     shift, and go to state 39
    MINUS  shift, and go to state 40
    ADDA   shift, and go to state 41
    SUBS   shift, and go to state 42
    NOT    shift, and go to state 43

    Exp  go to state 62


state 43

   47 Exp: NOT . Exp

    error  shift, and go to state 58
    INT    shift, and go to state 35
    ID     shift, and go to state 36
    FLOAT  shift, and go to state 37
    CHAR   shift, and go to state 38
    LP     shift, and go to state 39
    MINUS  shift, and go to state 40
    ADDA   shift, and go to state 41
    SUBS   shift, and go to state 42
    NOT    shift, and go to state 43

    Exp  go to state 63


state 44

   22 Stmt: IF . LP Exp RP Stmt
   23     | IF . LP Exp RP Stmt ELSE Stmt

    LP  shift, and go to state 64


state 45

   24 Stmt: WHILE . LP Exp RP Stmt

    LP  shift, and go to state 65


state 46

   21 Stmt: RETURN . Exp SEMI

    error  shift, and go to state 58
    INT    shift, and go to state 35
    ID     shift, and go to state 36
    FLOAT  shift, and go to state 37
    CHAR   shift, and go to state 38
    LP     shift, and go to state 39
    MINUS  shift, and go to state 40
    ADDA   shift, and go to state 41
    SUBS   shift, and go to state 42
    NOT    shift, and go to state 43

    Exp  go to state 66


state 47

   20 Stmt: CompSt .

    $default  reduce using rule 20 (Stmt)


state 48

   16 CompSt: LC DefList StmList . RC

    RC  shift, and go to state 67


state 49

   18 StmList: Stmt . StmList

    error   shift, and go to state 34
    INT     shift, and go to state 35
    ID      shift, and go to state 36
    FLOAT   shift, and go to state 37
    CHAR    shift, and go to state 38
    LP      shift, and go to state 39
    LC      shift, and go to state 17
    MINUS   shift, and go to state 40
    ADDA    shift, and go to state 41
    SUBS    shift, and go to state 42
    NOT     shift, and go to state 43
    IF      shift, and go to state 44
    WHILE   shift, and go to state 45
    RETURN  shift, and go to state 46

    RC  reduce using rule 17 (StmList)

    CompSt   go to state 47
    StmList  go to state 68
    Stmt     go to state 49
    Exp      go to state 50


state 50

   19 Stmt: Exp . SEMI
   33 Exp: Exp . ASSIGNOP Exp
   34    | Exp . AND Exp
   35    | Exp . OR Exp
   36    | Exp . RELOP Exp
   37    | Exp . PLUS Exp
   38    | Exp . MINUS Exp
   39    | Exp . ADDA
   40    | Exp . SUBS
   43    | Exp . STAR Exp
   44    | Exp . DIV Exp

    RELOP     shift, and go to state 69
    SEMI      shift, and go to state 70
    PLUS      shift, and go to state 71
    MINUS     shift, and go to state 72
    ADDA      shift, and go to state 73
    SUBS      shift, and go to state 74
    STAR      shift, and go to state 75
    DIV       shift, and go to state 76
    ASSIGNOP  shift, and go to state 77
    AND       shift, and go to state 78
    OR        shift, and go to state 79


state 51

   27 DefList: Def DefList .

    $default  reduce using rule 27 (DefList)


state 52

   14 VarList: ParamDec COMMA VarList .

    $default  reduce using rule 14 (VarList)


state 53

   32 Dec: VarDec ASSIGNOP . Exp

    error  shift, and go to state 58
    INT    shift, and go to state 35
    ID     shift, and go to state 36
    FLOAT  shift, and go to state 37
    CHAR   shift, and go to state 38
    LP     shift, and go to state 39
    MINUS  shift, and go to state 40
    ADDA   shift, and go to state 41
    SUBS   shift, and go to state 42
    NOT    shift, and go to state 43

    Exp  go to state 80


state 54

   28 Def: Specifier DecList SEMI .

    $default  reduce using rule 28 (Def)


state 55

   30 DecList: Dec COMMA . DecList

    ID  shift, and go to state 23

    VarDec   go to state 31
    DecList  go to state 81
    Dec      go to state 33


state 56

   54 Exp: error SEMI .

    $default  reduce using rule 54 (Exp)


state 57

   48 Exp: ID LP . Args RP
   49    | ID LP . RP

    error  shift, and go to state 58
    INT    shift, and go to state 35
    ID     shift, and go to state 36
    FLOAT  shift, and go to state 37
    CHAR   shift, and go to state 38
    LP     shift, and go to state 39
    RP     shift, and go to state 82
    MINUS  shift, and go to state 40
    ADDA   shift, and go to state 41
    SUBS   shift, and go to state 42
    NOT    shift, and go to state 43

    Exp   go to state 83
    Args  go to state 84


state 58

   54 Exp: error . SEMI

    SEMI  shift, and go to state 56


state 59

   33 Exp: Exp . ASSIGNOP Exp
   34    | Exp . AND Exp
   35    | Exp . OR Exp
   36    | Exp . RELOP Exp
   37    | Exp . PLUS Exp
   38    | Exp . MINUS Exp
   39    | Exp . ADDA
   40    | Exp . SUBS
   43    | Exp . STAR Exp
   44    | Exp . DIV Exp
   45    | LP Exp . RP

    RELOP     shift, and go to state 69
    RP        shift, and go to state 85
    PLUS      shift, and go to state 71
    MINUS     shift, and go to state 72
    ADDA      shift, and go to state 73
    SUBS      shift, and go to state 74
    STAR      shift, and go to state 75
    DIV       shift, and go to state 76
    ASSIGNOP  shift, and go to state 77
    AND       shift, and go to state 78
    OR        shift, and go to state 79


state 60

   33 Exp: Exp . ASSIGNOP Exp
   34    | Exp . AND Exp
   35    | Exp . OR Exp
   36    | Exp . RELOP Exp
   37    | Exp . PLUS Exp
   38    | Exp . MINUS Exp
   39    | Exp . ADDA
   40    | Exp . SUBS
   43    | Exp . STAR Exp
   44    | Exp . DIV Exp
   46    | MINUS Exp .

    ADDA  shift, and go to state 73
    SUBS  shift, and go to state 74

    $default  reduce using rule 46 (Exp)


state 61

   33 Exp: Exp . ASSIGNOP Exp
   34    | Exp . AND Exp
   35    | Exp . OR Exp
   36    | Exp . RELOP Exp
   37    | Exp . PLUS Exp
   38    | Exp . MINUS Exp
   39    | Exp . ADDA
   40    | Exp . SUBS
   41    | ADDA Exp .
   43    | Exp . STAR Exp
   44    | Exp . DIV Exp

    $default  reduce using rule 41 (Exp)


state 62

   33 Exp: Exp . ASSIGNOP Exp
   34    | Exp . AND Exp
   35    | Exp . OR Exp
   36    | Exp . RELOP Exp
   37    | Exp . PLUS Exp
   38    | Exp . MINUS Exp
   39    | Exp . ADDA
   40    | Exp . SUBS
   42    | SUBS Exp .
   43    | Exp . STAR Exp
   44    | Exp . DIV Exp

    $default  reduce using rule 42 (Exp)


state 63

   33 Exp: Exp . ASSIGNOP Exp
   34    | Exp . AND Exp
   35    | Exp . OR Exp
   36    | Exp . RELOP Exp
   37    | Exp . PLUS Exp
   38    | Exp . MINUS Exp
   39    | Exp . ADDA
   40    | Exp . SUBS
   43    | Exp . STAR Exp
   44    | Exp . DIV Exp
   47    | NOT Exp .

    ADDA  shift, and go to state 73
    SUBS  shift, and go to state 74

    $default  reduce using rule 47 (Exp)


state 64

   22 Stmt: IF LP . Exp RP Stmt
   23     | IF LP . Exp RP Stmt ELSE Stmt

    error  shift, and go to state 58
    INT    shift, and go to state 35
    ID     shift, and go to state 36
    FLOAT  shift, and go to state 37
    CHAR   shift, and go to state 38
    LP     shift, and go to state 39
    MINUS  shift, and go to state 40
    ADDA   shift, and go to state 41
    SUBS   shift, and go to state 42
    NOT    shift, and go to state 43

    Exp  go to state 86


state 65

   24 Stmt: WHILE LP . Exp RP Stmt

    error  shift, and go to state 58
    INT    shift, and go to state 35
    ID     shift, and go to state 36
    FLOAT  shift, and go to state 37
    CHAR   shift, and go to state 38
    LP     shift, and go to state 39
    MINUS  shift, and go to state 40
    ADDA   shift, and go to state 41
    SUBS   shift, and go to state 42
    NOT    shift, and go to state 43

    Exp  go to state 87


state 66

   21 Stmt: RETURN Exp . SEMI
   33 Exp: Exp . ASSIGNOP Exp
   34    | Exp . AND Exp
   35    | Exp . OR Exp
   36    | Exp . RELOP Exp
   37    | Exp . PLUS Exp
   38    | Exp . MINUS Exp
   39    | Exp . ADDA
   40    | Exp . SUBS
   43    | Exp . STAR Exp
   44    | Exp . DIV Exp

    RELOP     shift, and go to state 69
    SEMI      shift, and go to state 88
    PLUS      shift, and go to state 71
    MINUS     shift, and go to state 72
    ADDA      shift, and go to state 73
    SUBS      shift, and go to state 74
    STAR      shift, and go to state 75
    DIV       shift, and go to state 76
    ASSIGNOP  shift, and go to state 77
    AND       shift, and go to state 78
    OR        shift, and go to state 79


state 67

   16 CompSt: LC DefList StmList RC .

    $default  reduce using rule 16 (CompSt)


state 68

   18 StmList: Stmt StmList .

    $default  reduce using rule 18 (StmList)


state 69

   36 Exp: Exp RELOP . Exp

    error  shift, and go to state 58
    INT    shift, and go to state 35
    ID     shift, and go to state 36
    FLOAT  shift, and go to state 37
    CHAR   shift, and go to state 38
    LP     shift, and go to state 39
    MINUS  shift, and go to state 40
    ADDA   shift, and go to state 41
    SUBS   shift, and go to state 42
    NOT    shift, and go to state 43

    Exp  go to state 89


state 70

   19 Stmt: Exp SEMI .

    $default  reduce using rule 19 (Stmt)


state 71

   37 Exp: Exp PLUS . Exp

    error  shift, and go to state 58
    INT    shift, and go to state 35
    ID     shift, and go to state 36
    FLOAT  shift, and go to state 37
    CHAR   shift, and go to state 38
    LP     shift, and go to state 39
    MINUS  shift, and go to state 40
    ADDA   shift, and go to state 41
    SUBS   shift, and go to state 42
    NOT    shift, and go to state 43

    Exp  go to state 90


state 72

   38 Exp: Exp MINUS . Exp

    error  shift, and go to state 58
    INT    shift, and go to state 35
    ID     shift, and go to state 36
    FLOAT  shift, and go to state 37
    CHAR   shift, and go to state 38
    LP     shift, and go to state 39
    MINUS  shift, and go to state 40
    ADDA   shift, and go to state 41
    SUBS   shift, and go to state 42
    NOT    shift, and go to state 43

    Exp  go to state 91


state 73

   39 Exp: Exp ADDA .

    $default  reduce using rule 39 (Exp)


state 74

   40 Exp: Exp SUBS .

    $default  reduce using rule 40 (Exp)


state 75

   43 Exp: Exp STAR . Exp

    error  shift, and go to state 58
    INT    shift, and go to state 35
    ID     shift, and go to state 36
    FLOAT  shift, and go to state 37
    CHAR   shift, and go to state 38
    LP     shift, and go to state 39
    MINUS  shift, and go to state 40
    ADDA   shift, and go to state 41
    SUBS   shift, and go to state 42
    NOT    shift, and go to state 43

    Exp  go to state 92


state 76

   44 Exp: Exp DIV . Exp

    error  shift, and go to state 58
    INT    shift, and go to state 35
    ID     shift, and go to state 36
    FLOAT  shift, and go to state 37
    CHAR   shift, and go to state 38
    LP     shift, and go to state 39
    MINUS  shift, and go to state 40
    ADDA   shift, and go to state 41
    SUBS   shift, and go to state 42
    NOT    shift, and go to state 43

    Exp  go to state 93


state 77

   33 Exp: Exp ASSIGNOP . Exp

    error  shift, and go to state 58
    INT    shift, and go to state 35
    ID     shift, and go to state 36
    FLOAT  shift, and go to state 37
    CHAR   shift, and go to state 38
    LP     shift, and go to state 39
    MINUS  shift, and go to state 40
    ADDA   shift, and go to state 41
    SUBS   shift, and go to state 42
    NOT    shift, and go to state 43

    Exp  go to state 94


state 78

   34 Exp: Exp AND . Exp

    error  shift, and go to state 58
    INT    shift, and go to state 35
    ID     shift, and go to state 36
    FLOAT  shift, and go to state 37
    CHAR   shift, and go to state 38
    LP     shift, and go to state 39
    MINUS  shift, and go to state 40
    ADDA   shift, and go to state 41
    SUBS   shift, and go to state 42
    NOT    shift, and go to state 43

    Exp  go to state 95


state 79

   35 Exp: Exp OR . Exp

    error  shift, and go to state 58
    INT    shift, and go to state 35
    ID     shift, and go to state 36
    FLOAT  shift, and go to state 37
    CHAR   shift, and go to state 38
    LP     shift, and go to state 39
    MINUS  shift, and go to state 40
    ADDA   shift, and go to state 41
    SUBS   shift, and go to state 42
    NOT    shift, and go to state 43

    Exp  go to state 96


state 80

   32 Dec: VarDec ASSIGNOP Exp .
   33 Exp: Exp . ASSIGNOP Exp
   34    | Exp . AND Exp
   35    | Exp . OR Exp
   36    | Exp . RELOP Exp
   37    | Exp . PLUS Exp
   38    | Exp . MINUS Exp
   39    | Exp . ADDA
   40    | Exp . SUBS
   43    | Exp . STAR Exp
   44    | Exp . DIV Exp

    RELOP     shift, and go to state 69
    PLUS      shift, and go to state 71
    MINUS     shift, and go to state 72
    ADDA      shift, and go to state 73
    SUBS      shift, and go to state 74
    STAR      shift, and go to state 75
    DIV       shift, and go to state 76
    ASSIGNOP  shift, and go to state 77
    AND       shift, and go to state 78
    OR        shift, and go to state 79

    $default  reduce using rule 32 (Dec)


state 81

   30 DecList: Dec COMMA DecList .

    $default  reduce using rule 30 (DecList)


state 82

   49 Exp: ID LP RP .

    $default  reduce using rule 49 (Exp)


state 83

   33 Exp: Exp . ASSIGNOP Exp
   34    | Exp . AND Exp
   35    | Exp . OR Exp
   36    | Exp . RELOP Exp
   37    | Exp . PLUS Exp
   38    | Exp . MINUS Exp
   39    | Exp . ADDA
   40    | Exp . SUBS
   43    | Exp . STAR Exp
   44    | Exp . DIV Exp
   55 Args: Exp . COMMA Args
   56     | Exp .

    RELOP     shift, and go to state 69
    COMMA     shift, and go to state 97
    PLUS      shift, and go to state 71
    MINUS     shift, and go to state 72
    ADDA      shift, and go to state 73
    SUBS      shift, and go to state 74
    STAR      shift, and go to state 75
    DIV       shift, and go to state 76
    ASSIGNOP  shift, and go to state 77
    AND       shift, and go to state 78
    OR        shift, and go to state 79

    $default  reduce using rule 56 (Args)


state 84

   48 Exp: ID LP Args . RP

    RP  shift, and go to state 98


state 85

   45 Exp: LP Exp RP .

    $default  reduce using rule 45 (Exp)


state 86

   22 Stmt: IF LP Exp . RP Stmt
   23     | IF LP Exp . RP Stmt ELSE Stmt
   33 Exp: Exp . ASSIGNOP Exp
   34    | Exp . AND Exp
   35    | Exp . OR Exp
   36    | Exp . RELOP Exp
   37    | Exp . PLUS Exp
   38    | Exp . MINUS Exp
   39    | Exp . ADDA
   40    | Exp . SUBS
   43    | Exp . STAR Exp
   44    | Exp . DIV Exp

    RELOP     shift, and go to state 69
    RP        shift, and go to state 99
    PLUS      shift, and go to state 71
    MINUS     shift, and go to state 72
    ADDA      shift, and go to state 73
    SUBS      shift, and go to state 74
    STAR      shift, and go to state 75
    DIV       shift, and go to state 76
    ASSIGNOP  shift, and go to state 77
    AND       shift, and go to state 78
    OR        shift, and go to state 79


state 87

   24 Stmt: WHILE LP Exp . RP Stmt
   33 Exp: Exp . ASSIGNOP Exp
   34    | Exp . AND Exp
   35    | Exp . OR Exp
   36    | Exp . RELOP Exp
   37    | Exp . PLUS Exp
   38    | Exp . MINUS Exp
   39    | Exp . ADDA
   40    | Exp . SUBS
   43    | Exp . STAR Exp
   44    | Exp . DIV Exp

    RELOP     shift, and go to state 69
    RP        shift, and go to state 100
    PLUS      shift, and go to state 71
    MINUS     shift, and go to state 72
    ADDA      shift, and go to state 73
    SUBS      shift, and go to state 74
    STAR      shift, and go to state 75
    DIV       shift, and go to state 76
    ASSIGNOP  shift, and go to state 77
    AND       shift, and go to state 78
    OR        shift, and go to state 79


state 88

   21 Stmt: RETURN Exp SEMI .

    $default  reduce using rule 21 (Stmt)


state 89

   33 Exp: Exp . ASSIGNOP Exp
   34    | Exp . AND Exp
   35    | Exp . OR Exp
   36    | Exp . RELOP Exp
   36    | Exp RELOP Exp .
   37    | Exp . PLUS Exp
   38    | Exp . MINUS Exp
   39    | Exp . ADDA
   40    | Exp . SUBS
   43    | Exp . STAR Exp
   44    | Exp . DIV Exp

    PLUS   shift, and go to state 71
    MINUS  shift, and go to state 72
    ADDA   shift, and go to state 73
    SUBS   shift, and go to state 74
    STAR   shift, and go to state 75
    DIV    shift, and go to state 76

    $default  reduce using rule 36 (Exp)


state 90

   33 Exp: Exp . ASSIGNOP Exp
   34    | Exp . AND Exp
   35    | Exp . OR Exp
   36    | Exp . RELOP Exp
   37    | Exp . PLUS Exp
   37    | Exp PLUS Exp .
   38    | Exp . MINUS Exp
   39    | Exp . ADDA
   40    | Exp . SUBS
   43    | Exp . STAR Exp
   44    | Exp . DIV Exp

    ADDA  shift, and go to state 73
    SUBS  shift, and go to state 74
    STAR  shift, and go to state 75
    DIV   shift, and go to state 76

    $default  reduce using rule 37 (Exp)


state 91

   33 Exp: Exp . ASSIGNOP Exp
   34    | Exp . AND Exp
   35    | Exp . OR Exp
   36    | Exp . RELOP Exp
   37    | Exp . PLUS Exp
   38    | Exp . MINUS Exp
   38    | Exp MINUS Exp .
   39    | Exp . ADDA
   40    | Exp . SUBS
   43    | Exp . STAR Exp
   44    | Exp . DIV Exp

    ADDA  shift, and go to state 73
    SUBS  shift, and go to state 74
    STAR  shift, and go to state 75
    DIV   shift, and go to state 76

    $default  reduce using rule 38 (Exp)


state 92

   33 Exp: Exp . ASSIGNOP Exp
   34    | Exp . AND Exp
   35    | Exp . OR Exp
   36    | Exp . RELOP Exp
   37    | Exp . PLUS Exp
   38    | Exp . MINUS Exp
   39    | Exp . ADDA
   40    | Exp . SUBS
   43    | Exp . STAR Exp
   43    | Exp STAR Exp .
   44    | Exp . DIV Exp

    ADDA  shift, and go to state 73
    SUBS  shift, and go to state 74

    $default  reduce using rule 43 (Exp)


state 93

   33 Exp: Exp . ASSIGNOP Exp
   34    | Exp . AND Exp
   35    | Exp . OR Exp
   36    | Exp . RELOP Exp
   37    | Exp . PLUS Exp
   38    | Exp . MINUS Exp
   39    | Exp . ADDA
   40    | Exp . SUBS
   43    | Exp . STAR Exp
   44    | Exp . DIV Exp
   44    | Exp DIV Exp .

    ADDA  shift, and go to state 73
    SUBS  shift, and go to state 74

    $default  reduce using rule 44 (Exp)


state 94

   33 Exp: Exp . ASSIGNOP Exp
   33    | Exp ASSIGNOP Exp .
   34    | Exp . AND Exp
   35    | Exp . OR Exp
   36    | Exp . RELOP Exp
   37    | Exp . PLUS Exp
   38    | Exp . MINUS Exp
   39    | Exp . ADDA
   40    | Exp . SUBS
   43    | Exp . STAR Exp
   44    | Exp . DIV Exp

    RELOP  shift, and go to state 69
    PLUS   shift, and go to state 71
    MINUS  shift, and go to state 72
    ADDA   shift, and go to state 73
    SUBS   shift, and go to state 74
    STAR   shift, and go to state 75
    DIV    shift, and go to state 76
    AND    shift, and go to state 78
    OR     shift, and go to state 79

    $default  reduce using rule 33 (Exp)


state 95

   33 Exp: Exp . ASSIGNOP Exp
   34    | Exp . AND Exp
   34    | Exp AND Exp .
   35    | Exp . OR Exp
   36    | Exp . RELOP Exp
   37    | Exp . PLUS Exp
   38    | Exp . MINUS Exp
   39    | Exp . ADDA
   40    | Exp . SUBS
   43    | Exp . STAR Exp
   44    | Exp . DIV Exp

    RELOP  shift, and go to state 69
    PLUS   shift, and go to state 71
    MINUS  shift, and go to state 72
    ADDA   shift, and go to state 73
    SUBS   shift, and go to state 74
    STAR   shift, and go to state 75
    DIV    shift, and go to state 76

    $default  reduce using rule 34 (Exp)


state 96

   33 Exp: Exp . ASSIGNOP Exp
   34    | Exp . AND Exp
   35    | Exp . OR Exp
   35    | Exp OR Exp .
   36    | Exp . RELOP Exp
   37    | Exp . PLUS Exp
   38    | Exp . MINUS Exp
   39    | Exp . ADDA
   40    | Exp . SUBS
   43    | Exp . STAR Exp
   44    | Exp . DIV Exp

    RELOP  shift, and go to state 69
    PLUS   shift, and go to state 71
    MINUS  shift, and go to state 72
    ADDA   shift, and go to state 73
    SUBS   shift, and go to state 74
    STAR   shift, and go to state 75
    DIV    shift, and go to state 76
    AND    shift, and go to state 78

    $default  reduce using rule 35 (Exp)


state 97

   55 Args: Exp COMMA . Args

    error  shift, and go to state 58
    INT    shift, and go to state 35
    ID     shift, and go to state 36
    FLOAT  shift, and go to state 37
    CHAR   shift, and go to state 38
    LP     shift, and go to state 39
    MINUS  shift, and go to state 40
    ADDA   shift, and go to state 41
    SUBS   shift, and go to state 42
    NOT    shift, and go to state 43

    Exp   go to state 83
    Args  go to state 101


state 98

   48 Exp: ID LP Args RP .

    $default  reduce using rule 48 (Exp)


state 99

   22 Stmt: IF LP Exp RP . Stmt
   23     | IF LP Exp RP . Stmt ELSE Stmt

    error   shift, and go to state 34
    INT     shift, and go to state 35
    ID      shift, and go to state 36
    FLOAT   shift, and go to state 37
    CHAR    shift, and go to state 38
    LP      shift, and go to state 39
    LC      shift, and go to state 17
    MINUS   shift, and go to state 40
    ADDA    shift, and go to state 41
    SUBS    shift, and go to state 42
    NOT     shift, and go to state 43
    IF      shift, and go to state 44
    WHILE   shift, and go to state 45
    RETURN  shift, and go to state 46

    CompSt  go to state 47
    Stmt    go to state 102
    Exp     go to state 50


state 100

   24 Stmt: WHILE LP Exp RP . Stmt

    error   shift, and go to state 34
    INT     shift, and go to state 35
    ID      shift, and go to state 36
    FLOAT   shift, and go to state 37
    CHAR    shift, and go to state 38
    LP      shift, and go to state 39
    LC      shift, and go to state 17
    MINUS   shift, and go to state 40
    ADDA    shift, and go to state 41
    SUBS    shift, and go to state 42
    NOT     shift, and go to state 43
    IF      shift, and go to state 44
    WHILE   shift, and go to state 45
    RETURN  shift, and go to state 46

    CompSt  go to state 47
    Stmt    go to state 103
    Exp     go to state 50


state 101

   55 Args: Exp COMMA Args .

    $default  reduce using rule 55 (Args)


state 102

   22 Stmt: IF LP Exp RP Stmt .
   23     | IF LP Exp RP Stmt . ELSE Stmt

    ELSE  shift, and go to state 104

    $default  reduce using rule 22 (Stmt)


state 103

   24 Stmt: WHILE LP Exp RP Stmt .

    $default  reduce using rule 24 (Stmt)


state 104

   23 Stmt: IF LP Exp RP Stmt ELSE . Stmt

    error   shift, and go to state 34
    INT     shift, and go to state 35
    ID      shift, and go to state 36
    FLOAT   shift, and go to state 37
    CHAR    shift, and go to state 38
    LP      shift, and go to state 39
    LC      shift, and go to state 17
    MINUS   shift, and go to state 40
    ADDA    shift, and go to state 41
    SUBS    shift, and go to state 42
    NOT     shift, and go to state 43
    IF      shift, and go to state 44
    WHILE   shift, and go to state 45
    RETURN  shift, and go to state 46

    CompSt  go to state 47
    Stmt    go to state 105
    Exp     go to state 50


state 105

   23 Stmt: IF LP Exp RP Stmt ELSE Stmt .

    $default  reduce using rule 23 (Stmt)
